// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.5.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace SFT.Features.SitePages
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("User logs in")]
    public partial class UserLogsInFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Login.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "User logs in", "In order to be recognized by the website\nAs a registered user\nI want to be able t" +
                    "o log in", GenerationTargetLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Load login page")]
        public virtual void LoadLoginPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Load login page", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I am on the \'/home\' page");
#line 8
 testRunner.When("I click the \'Log In\' link");
#line 9
 testRunner.Then("the \'Login\' page should be displayed");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login with valid credentials")]
        [NUnit.Framework.CategoryAttribute("data")]
        public virtual void LoginWithValidCredentials()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login with valid credentials", new string[] {
                        "data"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
  testRunner.Given("I am on the \'/account/login\' page");
#line 14
  testRunner.And("that a user with a username of \'joeuser\' and a password of \'p@55w0rd\' exists");
#line 15
  testRunner.And("I have entered \'joeuser\' in the \'Username\' textbox");
#line 16
  testRunner.And("I have entered \'p@55w0rd\' in the \'Password\' textbox");
#line 17
  testRunner.When("I click the \'LOG IN\' button");
#line 18
  testRunner.Then("the \'Home\' page should be displayed");
#line 19
  testRunner.And("the \'Log Out\' link should be visible");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login with invalid password")]
        [NUnit.Framework.CategoryAttribute("data")]
        public virtual void LoginWithInvalidPassword()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login with invalid password", new string[] {
                        "data"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
  testRunner.Given("I am on the \'/account/login\' page");
#line 24
  testRunner.And("that a user with a username of \'joeuser\' and a password of \'p@55w0rd\' exists");
#line 25
  testRunner.And("I have entered \'joeuser\' in the \'Username\' textbox");
#line 26
  testRunner.And("I have entered \'password\' in the \'Password\' textbox");
#line 27
  testRunner.When("I click the \'LOG IN\' button");
#line 28
  testRunner.Then("the \'Login\' page should be displayed");
#line 29
  testRunner.And("I should see \'Username or password appears to be invalid\' on the page");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Login with invalid username")]
        [NUnit.Framework.CategoryAttribute("data")]
        public virtual void LoginWithInvalidUsername()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Login with invalid username", new string[] {
                        "data"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
  testRunner.Given("I am on the \'/account/login\' page");
#line 34
  testRunner.And("that a user with a username of \'joeuser\' and a password of \'p@55w0rd\' exists");
#line 35
  testRunner.And("I have entered \'notauser\' in the \'Username\' textbox");
#line 36
  testRunner.And("I have entered \'p@55w0rd\' in the \'Password\' textbox");
#line 37
  testRunner.When("I click the \'LOG IN\' button");
#line 38
  testRunner.Then("the \'Login\' page should be displayed");
#line 39
  testRunner.And("I should see \'Username or password appears to be invalid\' on the page");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
